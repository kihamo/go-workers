// Code generated by "enumer -type=DispatcherStatus -trimprefix=DispatcherStatus -output dispatcher_status_enumer.go"; DO NOT EDIT.

//
package workers

import (
	"fmt"
)

const _DispatcherStatusName = "UndefinedWaitProcessCancel"

var _DispatcherStatusIndex = [...]uint8{0, 9, 13, 20, 26}

func (i DispatcherStatus) String() string {
	if i < 0 || i >= DispatcherStatus(len(_DispatcherStatusIndex)-1) {
		return fmt.Sprintf("DispatcherStatus(%d)", i)
	}
	return _DispatcherStatusName[_DispatcherStatusIndex[i]:_DispatcherStatusIndex[i+1]]
}

var _DispatcherStatusValues = []DispatcherStatus{0, 1, 2, 3}

var _DispatcherStatusNameToValueMap = map[string]DispatcherStatus{
	_DispatcherStatusName[0:9]:   0,
	_DispatcherStatusName[9:13]:  1,
	_DispatcherStatusName[13:20]: 2,
	_DispatcherStatusName[20:26]: 3,
}

// DispatcherStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func DispatcherStatusString(s string) (DispatcherStatus, error) {
	if val, ok := _DispatcherStatusNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to DispatcherStatus values", s)
}

// DispatcherStatusValues returns all values of the enum
func DispatcherStatusValues() []DispatcherStatus {
	return _DispatcherStatusValues
}

// IsADispatcherStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i DispatcherStatus) IsADispatcherStatus() bool {
	for _, v := range _DispatcherStatusValues {
		if i == v {
			return true
		}
	}
	return false
}
