// Code generated by "enumer -type=WorkerStatus -trimprefix=WorkerStatus -trimprefix=WorkerStatus -output worker_status_enumer.go"; DO NOT EDIT.

//
package workers

import (
	"fmt"
)

const _WorkerStatusName = "UndefinedWaitProcessCancel"

var _WorkerStatusIndex = [...]uint8{0, 9, 13, 20, 26}

func (i WorkerStatus) String() string {
	if i < 0 || i >= WorkerStatus(len(_WorkerStatusIndex)-1) {
		return fmt.Sprintf("WorkerStatus(%d)", i)
	}
	return _WorkerStatusName[_WorkerStatusIndex[i]:_WorkerStatusIndex[i+1]]
}

var _WorkerStatusValues = []WorkerStatus{0, 1, 2, 3}

var _WorkerStatusNameToValueMap = map[string]WorkerStatus{
	_WorkerStatusName[0:9]:   0,
	_WorkerStatusName[9:13]:  1,
	_WorkerStatusName[13:20]: 2,
	_WorkerStatusName[20:26]: 3,
}

// WorkerStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func WorkerStatusString(s string) (WorkerStatus, error) {
	if val, ok := _WorkerStatusNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to WorkerStatus values", s)
}

// WorkerStatusValues returns all values of the enum
func WorkerStatusValues() []WorkerStatus {
	return _WorkerStatusValues
}

// IsAWorkerStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i WorkerStatus) IsAWorkerStatus() bool {
	for _, v := range _WorkerStatusValues {
		if i == v {
			return true
		}
	}
	return false
}
